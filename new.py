import streamlit as st
import math
import plotly.graph_objects as go

def calculate_kindergarten(residential_area, is_attached):
    """–†–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–µ—Ç—Å–∫–æ–≥–æ —Å–∞–¥–∞ –ø–æ –ú–ù–ì–ü"""
    # –†–∞—Å—á–µ—Ç –ø–æ —Å—Ç–∞—Ä–æ–º—É –ú–ù–ì–ü (36 –º–µ—Å—Ç –Ω–∞ 10000 –∫–≤.–º)
    places_old = math.ceil(max(50, residential_area / 10000 * 36))
    groups_old = max(4, math.ceil(places_old / 20))
    
    # –†–∞—Å—á–µ—Ç –ø–æ –Ω–æ–≤–æ–º—É –ú–ù–ì–ü (27 –º–µ—Å—Ç –Ω–∞ 10000 –∫–≤.–º)
    places_new = math.ceil(max(50, residential_area / 10000 * 27))
    groups_new = max(4, math.ceil(places_new / 20))
    
    # –†–∞—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–¥–∞–Ω–∏–π
    if is_attached:
        buildings_old = math.ceil(places_old / 150)
        buildings_new = math.ceil(places_new / 150)
    else:
        buildings_old = math.ceil(places_old / 350)
        buildings_new = math.ceil(places_new / 350)
    
    return {
        "old": {
            "places": places_old,
            "groups": groups_old,
            "buildings": buildings_old
        },
        "new": {
            "places": places_new,
            "groups": groups_new,
            "buildings": buildings_new
        }
    }

def calculate_school(residential_area):
    """–†–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —à–∫–æ–ª—ã –ø–æ –ú–ù–ì–ü"""
    # –†–∞—Å—á–µ—Ç –ø–æ —Å—Ç–∞—Ä–æ–º—É –ú–ù–ì–ü (76 –º–µ—Å—Ç –Ω–∞ 10000 –∫–≤.–º)
    places_old = math.ceil(residential_area / 10000 * 76)
    
    # –†–∞—Å—á–µ—Ç –ø–æ –Ω–æ–≤–æ–º—É –ú–ù–ì–ü (57 –º–µ—Å—Ç –Ω–∞ 10000 –∫–≤.–º)
    places_new = math.ceil(residential_area / 10000 * 57)
    
    # –†–∞—Å—á–µ—Ç –ø–ª–æ—â–∞–¥–∏ –∑–¥–∞–Ω–∏—è (20 –∫–≤.–º –Ω–∞ –º–µ—Å—Ç–æ)
    building_area_old = places_old * 20
    building_area_new = places_new * 20
    
    return {
        "old": {
            "places": places_old,
            "building_area": building_area_old
        },
        "new": {
            "places": places_new,
            "building_area": building_area_new
        }
    }

def main():
    st.set_page_config(page_title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¢–≠–ü", layout="wide")
    st.title("üìä –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¢–≠–ü –¥–ª—è –∂–∏–ª–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞")
    st.markdown("""
    –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É—á–∞—Å—Ç–∫–∞ –∏ –∑–¥–∞–Ω–∏—è, —á—Ç–æ–±—ã —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å:
    - –ü–ª–æ—â–∞–¥–∏ (–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è, –∂–∏–ª–∞—è, –ø–∞—Ä–∫–æ–≤–∫–∞, –æ–∑–µ–ª–µ–Ω–µ–Ω–∏–µ)
    - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω–æ–º–µ—Å—Ç
    - –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã (–¥–µ—Ç—Å–∫–∏–µ —Å–∞–¥—ã, —à–∫–æ–ª—ã)
    """)

    with st.expander("‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã", expanded=True):
        col1, col2 = st.columns(2)
        with col1:
            land_area = st.number_input("–ü–ª–æ—â–∞–¥—å —É—á–∞—Å—Ç–∫–∞ (–∫–≤.–º)", min_value=0.0, value=10000.0)
            building_footprint = st.number_input("–ü–ª–æ—â–∞–¥—å –ø—è—Ç–Ω–∞ –∑–∞—Å—Ç—Ä–æ–π–∫–∏ (–∫–≤.–º)", min_value=0.0, value=2000.0)
            floors = st.number_input("–≠—Ç–∞–∂–Ω–æ—Å—Ç—å", min_value=1, value=10)
        with col2:
            commercial_ground_floor = st.radio("1-–π —ç—Ç–∞–∂ –ø–æ–¥ –∫–æ–º–º–µ—Ä—Ü–∏—é?", ["–î–∞", "–ù–µ—Ç"], index=0)
            parking_norm_housing = st.number_input("–ù–æ—Ä–º–∞ –ø–∞—Ä–∫–æ–≤–∫–∏: –∂–∏–ª—å—ë (–∫–≤.–º/–º–µ—Å—Ç–æ)", value=80.0)
            parking_norm_commercial = st.number_input("–ù–æ—Ä–º–∞ –ø–∞—Ä–∫–æ–≤–∫–∏: –∫–æ–º–º–µ—Ä—Ü–∏—è (–∫–≤.–º/–º–µ—Å—Ç–æ)", value=50.0)
            is_attached_kindergarten = st.radio("–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ-–ø—Ä–∏—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π?", ["–î–ê", "–ù–ï–¢"], index=1)

    with st.expander("üöó –ü–∞—Ä–∫–æ–≤–∫–∞"):
        st.write("**–ì–∞–±–∞—Ä–∏—Ç—ã –º–∞—à–∏–Ω–æ–º–µ—Å—Ç–∞:**")
        col1, col2 = st.columns(2)
        with col1:
            parking_width = st.number_input("–®–∏—Ä–∏–Ω–∞ (–º)", value=5.3)
            parking_length = st.number_input("–î–ª–∏–Ω–∞ (–º)", value=2.5)
        with col2:
            parking_disabled_width = st.number_input("–®–∏—Ä–∏–Ω–∞ –¥–ª—è –∏–Ω–≤–∞–ª–∏–¥–æ–≤ (–º)", value=3.6)
            parking_disabled_length = st.number_input("–î–ª–∏–Ω–∞ –¥–ª—è –∏–Ω–≤–∞–ª–∏–¥–æ–≤ (–º)", value=7.5)

    with st.expander("üå≥ –û–∑–µ–ª–µ–Ω–µ–Ω–∏–µ –∏ –°–ë–ü"):
        landscaping_norm = st.number_input("–ù–æ—Ä–º–∞ –æ–∑–µ–ª–µ–Ω–µ–Ω–∏—è (–∫–≤.–º –Ω–∞ 100 –∫–≤.–º –∂–∏–ª—å—è)", value=20.0)
        landscaping_reduction = st.number_input("–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É–º–µ–Ω—å—à–µ–Ω–∏—è –æ–∑–µ–ª–µ–Ω–µ–Ω–∏—è", value=0.3, 
                                             min_value=0.0, max_value=1.0, step=0.1)
        
        st.write("**–ù–æ—Ä–º—ã –°–ë–ü (–∫–≤.–º –Ω–∞ 100 –∫–≤.–º –∂–∏–ª—å—è):**")
        col1, col2 = st.columns(2)
        with col1:
            sbp_playgrounds = st.number_input("–î–µ—Ç—Å–∫–∏–µ –ø–ª–æ—â–∞–¥–∫–∏", value=2.3)
            sbp_adult = st.number_input("–ü–ª–æ—â–∞–¥–∫–∏ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö", value=0.4)
        with col2:
            sbp_sports = st.number_input("–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏", value=6.6)
            sbp_other = st.number_input("–ü—Ä–æ—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã", value=0.0)

    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã
    if commercial_ground_floor == "–î–∞":
        commercial_area = building_footprint * 0.7
        residential_area = building_footprint * (floors - 1) * 0.7
    else:
        commercial_area = 0
        residential_area = building_footprint * floors * 0.7

    total_sellable_area = commercial_area + residential_area

    # –†–∞—Å—á–µ—Ç –ø–∞—Ä–∫–æ–≤–∫–∏
    parking_spaces = math.ceil(residential_area / parking_norm_housing) + math.ceil(commercial_area / parking_norm_commercial)
    parking_spaces_disabled = math.ceil(parking_spaces * 0.1)
    parking_area = parking_spaces * parking_width * parking_length
    parking_area_disabled = parking_spaces_disabled * parking_disabled_width * parking_disabled_length
    total_parking_area = (parking_area + parking_area_disabled) * 3  # –° —É—á–µ—Ç–æ–º –ø—Ä–æ–µ–∑–¥–æ–≤

    # –†–∞—Å—á–µ—Ç –æ–∑–µ–ª–µ–Ω–µ–Ω–∏—è –∏ –°–ë–ü
    landscaping_area = (residential_area / 100) * landscaping_norm * (1 - landscaping_reduction)
    sbp_area = (residential_area / 100) * (sbp_playgrounds + sbp_adult + sbp_sports + sbp_other)
    free_area = land_area - building_footprint - total_parking_area - sbp_area - landscaping_area

    # –†–∞—Å—á–µ—Ç —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    kindergarten_data = calculate_kindergarten(residential_area, is_attached_kindergarten == "–î–ê")
    school_data = calculate_school(residential_area)

    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    st.markdown("---")
    st.subheader("üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á—ë—Ç–æ–≤")

    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    st.write("### –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
    col1, col2, col3 = st.columns(3)
    with col1:
        st.metric("–ñ–∏–ª–∞—è –ø–ª–æ—â–∞–¥—å (–∫–≤.–º)", f"{residential_area:,.2f}".replace(",", " "))
        st.metric("–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –ø–ª–æ—â–∞–¥—å (–∫–≤.–º)", f"{commercial_area:,.2f}".replace(",", " "))
    with col2:
        st.metric("–û–±—â–∞—è –ø—Ä–æ–¥–∞–≤–∞–µ–º–∞—è –ø–ª–æ—â–∞–¥—å (–∫–≤.–º)", f"{total_sellable_area:,.2f}".replace(",", " "))
        st.metric("–°–≤–æ–±–æ–¥–Ω–∞—è –ø–ª–æ—â–∞–¥—å —É—á–∞—Å—Ç–∫–∞ (–∫–≤.–º)", f"{free_area:,.2f}".replace(",", " "))
    with col3:
        st.metric("–¢—Ä–µ–±—É–µ–º–æ–µ —á–∏—Å–ª–æ –º–∞—à–∏–Ω–æ–º–µ—Å—Ç (—à—Ç)", f"{parking_spaces:,}".replace(",", " "))
        st.metric("–ú–∞—à–∏–Ω–æ–º–µ—Å—Ç–∞ –¥–ª—è –∏–Ω–≤–∞–ª–∏–¥–æ–≤ (—à—Ç)", parking_spaces_disabled)

    # –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
    st.write("### –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã")
    
    st.write("#### –î–µ—Ç—Å–∫–∏–µ —Å–∞–¥—ã")
    col1, col2 = st.columns(2)
    with col1:
        st.write("**–ü–æ —Å—Ç–∞—Ä–æ–º—É –ú–ù–ì–ü (36 –º–µ—Å—Ç/10000 –∫–≤.–º)**")
        st.metric("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç", kindergarten_data["old"]["places"])
        st.metric("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø", kindergarten_data["old"]["groups"])
        st.metric("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–∞–Ω–∏–π", kindergarten_data["old"]["buildings"])
    with col2:
        st.write("**–ü–æ –Ω–æ–≤–æ–º—É –ú–ù–ì–ü (27 –º–µ—Å—Ç/10000 –∫–≤.–º)**")
        st.metric("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç", kindergarten_data["new"]["places"])
        st.metric("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø", kindergarten_data["new"]["groups"])
        st.metric("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–∞–Ω–∏–π", kindergarten_data["new"]["buildings"])

    st.write("#### –®–∫–æ–ª—ã")
    col1, col2 = st.columns(2)
    with col1:
        st.write("**–ü–æ —Å—Ç–∞—Ä–æ–º—É –ú–ù–ì–ü (76 –º–µ—Å—Ç/10000 –∫–≤.–º)**")
        st.metric("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç", school_data["old"]["places"])
        st.metric("–ü–ª–æ—â–∞–¥—å –∑–¥–∞–Ω–∏—è (–∫–≤.–º)", f"{school_data['old']['building_area']:,.2f}".replace(",", " "))
    with col2:
        st.write("**–ü–æ –Ω–æ–≤–æ–º—É –ú–ù–ì–ü (57 –º–µ—Å—Ç/10000 –∫–≤.–º)**")
        st.metric("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç", school_data["new"]["places"])
        st.metric("–ü–ª–æ—â–∞–¥—å –∑–¥–∞–Ω–∏—è (–∫–≤.–º)", f"{school_data['new']['building_area']:,.2f}".replace(",", " "))

    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
    st.markdown("---")
    st.subheader("üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–æ—â–∞–¥–∏ —É—á–∞—Å—Ç–∫–∞")
    
    labels = ["–ó–¥–∞–Ω–∏–µ", "–ü–∞—Ä–∫–æ–≤–∫–∞", "–û–∑–µ–ª–µ–Ω–µ–Ω–∏–µ", "–°–ë–ü", "–°–≤–æ–±–æ–¥–Ω–∞—è –ø–ª–æ—â–∞–¥—å"]
    values = [building_footprint, total_parking_area, landscaping_area, sbp_area, free_area]
    
    fig = go.Figure(data=[go.Pie(
        labels=labels,
        values=values,
        hole=0.3,
        textinfo='percent+label',
        marker=dict(colors=['#636EFA', '#EF553B', '#00CC96', '#AB63FA', '#FFA15A'])
    )])
    
    fig.update_layout(
        title_text="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–æ—â–∞–¥–∏ —É—á–∞—Å—Ç–∫–∞",
        showlegend=True,
        height=500
    )
    
    st.plotly_chart(fig, use_container_width=True)

if __name__ == "__main__":
    main()
