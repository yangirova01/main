import streamlit as st
import math
import plotly.graph_objects as go

def calculate_kindergarten(residential_area, is_attached):
    """–†–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–µ—Ç—Å–∫–æ–≥–æ —Å–∞–¥–∞ –ø–æ –ú–ù–ì–ü"""
    places_old = math.ceil(max(50, residential_area / 10000 * 36))
    groups_old = max(4, math.ceil(places_old / 20))
    
    places_new = math.ceil(max(50, residential_area / 10000 * 27))
    groups_new = max(4, math.ceil(places_new / 20))
    
    if is_attached:
        buildings_old = math.ceil(places_old / 150)
        buildings_new = math.ceil(places_new / 150)
    else:
        buildings_old = math.ceil(places_old / 350)
        buildings_new = math.ceil(places_new / 350)
    
    return {
        "old": {"places": places_old, "groups": groups_old, "buildings": buildings_old},
        "new": {"places": places_new, "groups": groups_new, "buildings": buildings_new}
    }

def calculate_school(residential_area):
    """–†–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —à–∫–æ–ª—ã –ø–æ –ú–ù–ì–ü"""
    places_old = math.ceil(residential_area / 10000 * 76)
    places_new = math.ceil(residential_area / 10000 * 57)
    return {
        "old": {"places": places_old, "building_area": places_old * 20},
        "new": {"places": places_new, "building_area": places_new * 20}
    }

def create_pie_chart(labels, values):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    non_zero = [(label, value) for label, value in zip(labels, values) if value > 0]
    if not non_zero:
        return None
    
    filtered_labels, filtered_values = zip(*non_zero)
    
    fig = go.Figure(data=[go.Pie(
        labels=filtered_labels,
        values=filtered_values,
        hole=0.3,
        textinfo='percent+label',
        textposition='inside',
        marker=dict(colors=['#636EFA', '#EF553B', '#00CC96', '#AB63FA', '#FFA15A'])
    )])
    
    fig.update_layout(
        title_text="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–æ—â–∞–¥–∏ —É—á–∞—Å—Ç–∫–∞",
        showlegend=True,
        height=500,
        uniformtext_minsize=12,
        uniformtext_mode='hide'
    )
    return fig

def main():
    st.set_page_config(page_title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¢–≠–ü", layout="wide")
    st.title("üìä –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¢–≠–ü –¥–ª—è –∂–∏–ª–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞")
    
    # –í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    with st.expander("‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã", expanded=True):
        col1, col2 = st.columns(2)
        with col1:
            land_area = st.number_input("–ü–ª–æ—â–∞–¥—å —É—á–∞—Å—Ç–∫–∞ (–∫–≤.–º)", min_value=0.0, value=10000.0)
            building_footprint = st.number_input("–ü–ª–æ—â–∞–¥—å –ø—è—Ç–Ω–∞ –∑–∞—Å—Ç—Ä–æ–π–∫–∏ (–∫–≤.–º)", min_value=0.0, value=2000.0)
            floors = st.number_input("–≠—Ç–∞–∂–Ω–æ—Å—Ç—å", min_value=1, value=10)
        with col2:
            commercial_ground_floor = st.radio("1-–π —ç—Ç–∞–∂ –ø–æ–¥ –∫–æ–º–º–µ—Ä—Ü–∏—é?", ["–î–∞", "–ù–µ—Ç"], index=0)
            is_attached_kindergarten = st.radio("–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ-–ø—Ä–∏—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π?", ["–î–ê", "–ù–ï–¢"], index=1)

    # –†–∞—Å—á–µ—Ç –ø–ª–æ—â–∞–¥–µ–π
    if commercial_ground_floor == "–î–∞":
        commercial_area = building_footprint * 0.7
        residential_area = building_footprint * (floors - 1) * 0.7
    else:
        commercial_area = 0
        residential_area = building_footprint * floors * 0.7

    total_sellable_area = commercial_area + residential_area
    
    # –†–∞—Å—á–µ—Ç —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    kindergarten_data = calculate_kindergarten(residential_area, is_attached_kindergarten == "–î–ê")
    school_data = calculate_school(residential_area)

    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
    st.markdown("---")
    st.subheader("üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–æ—â–∞–¥–∏ —É—á–∞—Å—Ç–∫–∞")
    
    # –†–∞—Å—á–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã
    building_area = building_footprint
    parking_area = building_footprint * 0.5  # –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç
    landscaping_area = land_area * 0.2       # –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç
    sbp_area = land_area * 0.1               # –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç
    free_area = max(0, land_area - building_area - parking_area - landscaping_area - sbp_area)
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã
    labels = ["–ó–¥–∞–Ω–∏–µ", "–ü–∞—Ä–∫–æ–≤–∫–∞", "–û–∑–µ–ª–µ–Ω–µ–Ω–∏–µ", "–°–ë–ü", "–°–≤–æ–±–æ–¥–Ω–∞—è –ø–ª–æ—â–∞–¥—å"]
    values = [building_area, parking_area, landscaping_area, sbp_area, free_area]
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—ã—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    with st.expander("üîç –î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã"):
        st.write(dict(zip(labels, values)))
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∏–∞–≥—Ä–∞–º–º—ã
    fig = create_pie_chart(labels, values)
    if fig:
        st.plotly_chart(fig, use_container_width=True)
    else:
        st.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∏–∞–≥—Ä–∞–º–º—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.")

    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    st.markdown("---")
    st.subheader("üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á—ë—Ç–æ–≤")
    
    col1, col2 = st.columns(2)
    with col1:
        st.metric("–ñ–∏–ª–∞—è –ø–ª–æ—â–∞–¥—å (–∫–≤.–º)", f"{residential_area:,.2f}")
        st.metric("–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –ø–ª–æ—â–∞–¥—å (–∫–≤.–º)", f"{commercial_area:,.2f}")
    with col2:
        st.metric("–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å —É—á–∞—Å—Ç–∫–∞ (–∫–≤.–º)", f"{land_area:,.2f}")
        st.metric("–°–≤–æ–±–æ–¥–Ω–∞—è –ø–ª–æ—â–∞–¥—å —É—á–∞—Å—Ç–∫–∞ (–∫–≤.–º)", f"{free_area:,.2f}")

if __name__ == "__main__":
    main()
