import streamlit as st
import pandas as pd
from cianparser import CianParser
from geopy.geocoders import Nominatim
import plotly.express as px
from geopy.extra.rate_limiter import RateLimiter

# –ö—ç—à–∏—Ä—É–µ–º –≥–µ–æ–∫–æ–¥–µ—Ä –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∞–¥—Ä–µ—Å–æ–≤
@st.cache_resource
def get_geocoder():
    geolocator = Nominatim(user_agent="real_estate_autocomplete")
    return RateLimiter(geolocator.geocode, min_delay_seconds=1)

def get_address_suggestions(query):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∞–¥—Ä–µ—Å–æ–≤"""
    try:
        geolocator = get_geocoder()
        locations = geolocator.geocode(query, exactly_one=False, limit=5)
        return [location.address for location in locations] if locations else []
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫: {str(e)}")
        return []

def main():
    st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω —Å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º", layout="wide")
    st.title("üè† –ü–æ–∏—Å–∫ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ —Å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∞–¥—Ä–µ—Å–æ–≤")
    
    # –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º
    address_query = st.text_input("–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –∞–¥—Ä–µ—Å...", "–ö–∞–∑–∞–Ω—å, –ö–∞—Å–∞—Ç–∫–∏–Ω–∞ 3")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞
    if address_query and len(address_query) > 3:
        suggestions = get_address_suggestions(address_query)
        
        # –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–æ–∫
        if suggestions:
            st.write("üîç –í–æ–∑–º–æ–∂–Ω–æ –≤—ã –∏—â–µ—Ç–µ:")
            cols = st.columns(3)
            
            for idx, suggestion in enumerate(suggestions[:3]):
                with cols[idx % 3]:
                    if st.button(suggestion, key=f"sugg_{idx}"):
                        address_query = suggestion  # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    
    # –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –∞–Ω–∞–ª–∏–∑–∞...
    if st.button("–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", disabled=not address_query):
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤–∞—à –∫–æ–¥ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø—Ä–∏–º–µ—Ä–∞
        st.success(f"–ê–Ω–∞–ª–∏–∑ –¥–ª—è –∞–¥—Ä–µ—Å–∞: {address_query}")
        # –î–∞–ª—å–Ω–µ–π—à–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞...

if __name__ == "__main__":
    main()
